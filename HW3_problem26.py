def deBruijn(k,text):
    graph = {}
    for i in range(len(text)-k+1):
        kmer = text[i:i+k]
        prefix = kmer[:-1]
        suffix = kmer[1:]
        graph.setdefault(prefix,[]).append(suffix)
    return graph

output = deBruijn(12,'TTGCTCAACATTACCGCAGCTTGTTATACCACCGGACTAAGTTGTTGTCAAGTTTTCAGGTACACGAGTGAAGTTCATTTATTCACCAGGTCACAGATCCGGTCAAAGTAACCAGGACCCAAGCTGGCTGGTGTAAGCCCTCCGAGCCCTGGCCACACTGAAAGCCCTCTATCTTGTCGTGATGACTCGACTAATAAACCCAGATGGGGGAATTCATTAGTCGATCGAGGCCGGTACCCACCTTTTGCACGCCCAGGGTATGTGTTCTTCTCGGTCTGTTCGGAGCGCATTGTGTAAGGTAAGGGCATCCTGGACGCGAAAGTTACTCCCGCAGCTAGGCAAATGTCATTGAGCAAATCCTTACCAGGGGTATGAATTCTCAACTCCGCAGCAGATCAAGTTACCTAATCTTGCGTCAGCCGCTCCGTACGTGCAGCAGGTTTATGACATCCGACATGTTGCATACGGCAGCTTTCTGACTGTGCTGTTTATCTACTGAGCGGCCTGCTATTGGGTAGCTAGCCTAGGGAGTTACATCTTGGGACTTCTGCAAACCTTAAAAACAGAGTAGCGAAAAAGAAACAAAGTTACTTCCACGTTGTATAATCAGCACCCCACCTAGTTTATGTCCTGGCCTTCTCCGATAGGTCCTAGCAGGTTCAGAAATAGTCGGTTATCTGCCGTGGCACAAAATCATGAGCCAACGGTGAAGAGCTGACTTGCCAACCAAGTCTATAGCAGGAAGGGTAGCAGATATGTGATATAATGTGGTTAGTGGGCATGGATAGCTAGAAGGCCTACCATCCACAGAACAATCATCCTAAGTCGGAGGTGAGGGCAAGTATGATATCGGTTAATGTATCTGGTACGCAGTCTAATCTGATTATTGAGATTGATGACAATGCGGTGGGTTCTCTCGGGCAACATCTCACAATATATCCGCGGGACAGACCAGAACATGTCAACCTATCCGAGTTCGGGCCCTAATTCGCTATTGGTTGAGAGTGGGAGCGACATGCGTCCCCTAATCGCCTGCATGATACACTACTCTGTTCATCACTGACTATGTATTGATGCAGCACTATGGACCTGGGCTCTTGTCCGTCGCTACGACAGCCGGTAGGTTCGTAAGCCGATACCTACCAACGGCATTCTGAATGATACCAGAGCCCAACCTCCAACGGCTCTCAATTGCTCTGCAGTGTCGAGCGCAGCAAATCCACGTTGCGTGAGCCACCCATACAAAAGTGGTATCACCATATCTGGTCGCAGACGCCCCCTTCACTAGACTTCCCAATGTAGGCCGGCAACGACTCTCATTTGTGTGTCGGCACTTGAAGAAATGCTTTTAGTTACCCCGGAGAATTATGCCATACCTATCAATCCTTGCCGGTGCGAACTCCACAGCGCATCGAAAATTCCTGCCTCACCTATCGTGGGAGCGACACCTTTTAAGATGAAGGGTGCCAGGGTACATTGCGGGCCACGGGCGTCTCGGGAAGTCTTGTCGCGACGGGAGTGCAGTCTGCACCAAGTGCGCTTAGACGTTGATCACTTTCTTATAGTAAAGGATGCCCTAGGTTGGATTTATTCTAGTCGAGCCCAAATTACCGTTATGCCAAGCCTACGGTTCTGTTGTTGATTTCAGCAGTGCGTGAGCAGAGCAAAGTTAAAACACTGGTTAGTGGTCCGATTGGTGGTTTTATTTCAAGGGGACGGGTCCCTTTCGTCGTATTGTAGGCAGCTCAATAAACGACAGGCCGACAGGGCGTTTATCGGACATTTGTCATGAGAGAGCGGCTTTAGCGATCTAGCGATCAGAGTGTCATTATCGGAGAAATGCGTGAGTAGTACGAATTTGCACTGGACTGCGGGAAGTGAGTCTCAATCCCCAATTCGCAATCTACGACCATTTCAATTATCGGGCCAAATAGTGCCGCAATTAATAGATTACGAATTTCGTATTGGTTAAATCAATTTACACGAACCTGTGTTCCATC')
for prefix in sorted(output.keys()):
    print(prefix+' -> '+ ','.join(sorted(output[prefix])))